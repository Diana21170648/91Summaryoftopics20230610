【Day 40 】2023-07-19 - 796. Minimum Light Radius #42
Open
azl397985856 opened this issue 12 hours ago · 2 comments
Comments
@azl397985856
azl397985856 commented 12 hours ago
796. Minimum Light Radius
入选理由
暂无

题目地址
https://binarysearch.com/problems/Minimum-Light-Radius

前置知识
排序
二分法
题目描述
You are given a list of integers nums representing coordinates of houses on a 1-dimensional line. You have 3 street lights that you can put anywhere on the coordinate line and a light at coordinate x lights up houses in [x - r, x + r], inclusive. Return the smallest r required such that we can place the 3 lights and all the houses are lit up.

Constraints

n ≤ 100,000 where n is the length of nums
Example 1
Input
nums = [3, 4, 5, 6]
Output
0.5
Explanation
If we place the lamps on 3.5, 4.5 and 5.5 then with r = 0.5 we can light up all 4 houses.

@Diana21170648
Diana21170648 commented now
思路
二分找左边界

代码
class Solution:
    def solve(self, nums):
        nums.sort()
        N = len(nums)
        if N <= 3:
            return 0
        LIGHTS = 3
        # 这里使用的是直径，因此最终返回需要除以 2
        def possible(diameter):
            start = nums[0]
            end = start + diameter
            for i in range(LIGHTS):
                idx = bisect_right(nums, end)
                if idx >= N:
                    return True
                start = nums[idx]
                end = start + diameter
            return False

        l, r = 0, nums[-1] - nums[0]
        while l <= r:
            mid = (l + r) // 2
            if possible(mid):
                r = mid - 1
            else:
                l = mid + 1
        return l / 2
复杂度分析

时间复杂度：O()，其中 N 为数组长度。
空间复杂度：O()


@azl397985856 azl397985856 added 二分 40 labels 12 hours ago
@HuiyingC
HuiyingC commented 4 hours ago
思路
从左开始模拟放置灯。先在 nums[0] + r 处放置一个灯，其可以覆盖 [0, 2 * r]。由于 nums 已经排好序了，那么这个灯可以覆盖到的房间其实就是 nums 中坐标小于等于 2 * r 所有房间，使用二分查找即可。对于 nums 右侧的所有的房间我们需要继续放置灯，采用同样的方式即可。

key: binary search; greedy - find minimum

Code
# 从左开始模拟放置灯。先在 nums[0] + r 处放置一个灯，其可以覆盖 [nums[0], 2 * r]。
# 由于 nums 已经排好序了，那么这个灯可以覆盖到的房间其实就是 nums 中坐标小于等于 2 * r 所有房间，使用能力检测二分查找即可。
# 对于 nums 右侧的所有的房间我们需要继续放置灯，采用同样的方式即可。
def solve(arr):
    arr.sort()
    n = len(arr)
    if n <= 3:
        return 0
    n_lights = 3

    def check(radius):
        lo, hi = arr[0], arr[0]+2*radius

        for i in range(n_lights):
            idx = bisect_right(arr, hi)  # find idx that hi can be inserted into sorted arr # O(logn)

            if idx >= n_lights:
                return True

            lo = nums[idx]
            hi = lo + 2*radius

            return False

    # l, r = arr[0], arr[-1]
    # binarySearchFindMinimum(arr)

    return radius
Complexity
Time : O(nlogn) - sort()

Space: O(1)

